{"version":3,"sources":["components/Movies.js","routes/Home.js","routes/Detail.js","App.js","index.js"],"names":["Movie","id","coverImg","title","year","summary","genres","src","alt","to","map","g","Home","useState","loading","setLoading","movies","setMovies","getMovies","a","fetch","response","json","data","useEffect","console","log","movie","medium_cover_image","Detail","useParams","getMovie","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NA8BeA,MA3Bf,YAAgE,IAA/CC,EAA8C,EAA9CA,GAAIC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,OACnD,OACE,gCACE,qBAAKC,IAAKL,EAAUM,IAAKL,IACzB,6BACE,eAAC,IAAD,CAAMM,GAAE,iBAAYR,GAApB,UACGE,EADH,KACYC,EADZ,IACmB,SAGrB,4BAAIC,IACJ,6BACGC,EAAOI,KAAI,SAACC,GAAD,OACV,6BAAaA,GAAJA,YC0CJC,MAtDf,WACE,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAeMC,EAAS,uCAAG,8BAAAC,EAAA,sEACOC,MAAM,2EADb,cACVC,EADU,gBAIGA,EAASC,OAJZ,OAIVA,EAJU,OAMhBL,EAAUK,EAAKC,KAAKP,QACpBD,GAAW,GAPK,2CAAH,qDAcf,OALAS,qBAAU,WACRN,MACC,IAEHO,QAAQC,IAAIV,GAEV,8BACGF,EACC,4CAEA,8BACGE,EAAON,KAAI,SAACiB,GAAD,OACV,cAAC,EAAD,CAEE1B,GAAI0B,EAAM1B,GACVC,SAAUyB,EAAMC,mBAChBzB,MAAOwB,EAAMxB,MACbC,KAAMuB,EAAMvB,KACZC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMrB,QANTqB,EAAM1B,YCxBV4B,MAff,WACE,IAAQ5B,EAAO6B,cAAP7B,GAEF8B,EAAQ,uCAAG,4BAAAZ,EAAA,sEAEPC,MAAM,qDAAD,OAAsDnB,IAFpD,8BAGbqB,OAHa,OACTA,EADS,OAIfG,QAAQC,IAAIJ,GAJG,2CAAH,qDASd,OAHAE,qBAAU,WACRO,MACC,IACI,yCCOMC,MAlBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,2CAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,YCXVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fae7cd7a.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction Movie({ id, coverImg, title, year, summary, genres }) {\n  return (\n    <div>\n      <img src={coverImg} alt={title} />\n      <h2>\n        <Link to={`/movie/${id}`}>\n          {title} ({year}){\" \"}\n        </Link>\n      </h2>\n      <p>{summary}</p>\n      <ul>\n        {genres.map((g) => (\n          <li key={g}>{g}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  coverImg: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  year: PropTypes.number.isRequired,\n  summary: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\nexport default Movie;\n","import { useState, useEffect } from \"react\";\nimport Movie from \"../components/Movies\";\n\nfunction Home() {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n\n  /* useEffect(() => {\n      fetch(\n        `https://yts.mx/api/v2/list_movies.json?minimum_rationg=8.5&sort_by=year`\n      )\n        .then((response) => response.json())\n        .then((json) => {\n          setMovies(json.data.movies);\n          setLoading(false);\n        });\n    }, []); \n      최신 기법은 then을 쓰지 않고 아래의 코드처럼 async await를 사용한다.\n    */\n\n  const getMovies = async () => {\n    const response = await fetch(\n      `https://yts.mx/api/v2/list_movies.json?minimum_rationg=8.8&sort_by=year`\n    );\n    const json = await response.json();\n    // -> const response = await (await fetch(...)).json(); 이렇게도 표현 가능\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  console.log(movies);\n  return (\n    <div>\n      {loading ? (\n        <h1>Loading...</h1>\n      ) : (\n        <div>\n          {movies.map((movie) => (\n            <Movie\n              key={movie.id}\n              id={movie.id}\n              coverImg={movie.medium_cover_image}\n              title={movie.title}\n              year={movie.year}\n              summary={movie.summary}\n              genres={movie.genres}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n","import { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\"; // useParams로 파라미터의 값을 받아올 수 있음 여기서는 영화의 id값\n\nfunction Detail() {\n  const { id } = useParams();\n  // console.log(id);\n  const getMovie = async () => {\n    const json = await (\n      await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n    ).json();\n    console.log(json);\n  };\n  useEffect(() => {\n    getMovie();\n  }, []);\n  return <h1>Detail</h1>;\n}\n\nexport default Detail;\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport Detail from \"./routes/Detail\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/hello\">\n          <h1>Hello!!</h1>\n        </Route>\n        <Route path=\"/movie/:id\">\n          <Detail />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}